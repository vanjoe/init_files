;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(shell-command-history search-ring gud-gud-gdb-history read-expression-history gud-gdb-history query-replace-history grep-files-history grep-regexp-history compile-history minibuffer-history yes-or-no-p-history file-name-history string-rectangle-history buffer-name-history extended-command-history))
(setq shell-command-history '("git-cola"))
(setq search-ring '("yas/" "ac" "auto-complete" "a" "auto-complete-c" "c-hea" "auto-comp" "auto-comple" "au" "ac-template-action" "yas/" "yas" "clang" "time" "tmp" "main"))
(setq gud-gud-gdb-history '("gdb --fullname test.elf"))
(setq read-expression-history '("(set-face-attribute 'default nil :height 100)" "(set-face-attribute 'default nil :height 50)" "(set-face-attribute 'default nil:height 50)"))
(setq gud-gdb-history '("gdb -i=mi ./test.elf " "gdb -i=mi ./test.elf | grep TOTAL" "gdb -i=mi ./test.elf " "gdb -i=mi ./test.elf core" "gdb -i=mi ./test.elf" "gdb -i=mi ./op_test.elf " "gdb -i=mi ./op_test.elf" "gdb -i=mi ./test.elf" "gdb -i=mi ./test" "gdb -i=mi test" "gdb -i=mi "))
(setq query-replace-history '("vbx_word_t*" "void" "" " " "+" "
" " " "	" "Vector" "Stream" "this->set_vl()" "set_vl(*this)" "this->set_vl(" "set_vl(*this," "vbx_uword_t" "vbx_word_t" "0" "2" "-1" "0" "2" "-1" "" "-1 2" "1" "0" "0" "1" "uword" "ubyte"))
(setq grep-files-history '("*.[ch]" "*.[ch]*" "*.[ch]"))
(setq grep-regexp-history '("application_mode" "demo_t" "init_demo" "fix16_sqrt" "_VBX_GET1" "VBX_GET" "vbxsim_1D_VVBBS" "_vbx_dma_to_host" "VBX_GET_THIS" "vbx_sp_malloc"))
(setq compile-history '("make download-elf" "make download-elf && ./test.elf " "make CPU_TARGET=SIM && ./test.elf " "make CPU_TARGET=SIM" "make CPU_TARGEt=SIM" "make CPU_TARGET=SIM" "make CPU_TARGET=CPU_TARGET" "make CPU_TARGET=XIL_ARM" "make CPU_TARGET=SIM" "make -k " "make " "make CPU_TARGET=SIM && ./test.elf " "make CPU_TARGET=SIM" "g++ test.cpp && ./a.out" "make CPU_TARGET=SIM" "make " "make CPU_TARGET=SIM " "make CPU_TARGET=SIM && ./test.elf " "make CPU_TARGET=SIM" "make -j  download-elf" "make -k " "make CPU_TARGET=SIM" "make -k " "make " "make C" "make CPU_TARGET=SIM " "clang++ test.cpp -I ../../lib/vbxapi/ -I ../../lib/vbxtest/ -DVBX_SIMULATOR" "clang++ test.cpp -I ../../lib/vbxapi/ -I ../../lib/vbxtest/ -DVBX_SIMULTOR" "clang++ test.cpp -I ../../lib/vbxapi/ -I ../../lib/vbxtest/" "make CPU_TARGET=SIM "))
(setq minibuffer-history '("-I/home/joel/Documents/vblox.pristine/software/lib/altdemo -I/home/joel/Documents/vblox.pristine/software/lib/bsp -I/home/joel/Documents/vblox.pristine/software/lib/libfixmath -I/home/joel/Documents/vblox.pristine/software/lib/scalar -I/home/joel/Documents/vblox.pristine/software/lib/vbxapi -I/home/joel/Documents/vblox.pristine/software/lib/vbxint -I/home/joel/Documents/vblox.pristine/software/lib/vbxlib -I/home/joel/Documents/vblox.pristine/software/lib/vbxsim -I/home/joel/Documents/vblox.pristine/software/lib/vbxtest -I/home/joel/Documents/vblox.pristine/software/lib/vbxware" "73" "61" "321" "400" "-I ../../lib/vbxapi/" "314" "49" "hs-hide-level" "269" "2529" "210" "124" "436" "321" "94" "25112" "214" "183" "364" "304" "231" "191" "244" "98" "282" "543" "900" "207" "232"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "y" "yes" "no" "yes" "no" "yes" "no" "yes" "n" "yes" "ues" "yes" "no" "yes" "no" "yes"))
(setq file-name-history '("~/.emacs" "~/Documents/vblox.cppclass/software/test/vbx_vector/new_style.cpp" "~/Documents/vblox.cppclass/software/test/vbx_vector/../../lib/vbxapi/vbx_macros.h" "/nfs/home/joel/Documents/vblox.cppclass/software/test/vbx_vector/test.cpp" "~/Documents/vblox.cppclass/software/test/vbx_vector/../../lib/vbxapi/vbx_vector.hpp" "~/Documents/vblox.xilinx/software/lib/vbxtest/vbx_test.c" "~/Documents/vblox.xilinx/software/test/opencv/../../lib/vbxtest/vbx_test.h" "~/Documents/vblox.xilinx/software/test/opencv/../../lib/vbxapi/vbx_api.c" "~/Documents/vblox.xilinx/software/test/opencv/test.cpp" "/nfs/home/joel/Documents/vblox.xilinx/software/test/opencv/" "~/Documents/vblox.xilinx/software/test/opencv/test.cpp" "~/Documents/vblox.xilinx/software/test/opencv/fifo.hpp" "~/.emacs" "~/Documents/vblox.xilinx/software/test/opencv/fifo.hpp" "~/Documents/vblox.xilinx/software/test/opencv/sources.mk" "~/Documents/vblox.xilinx/software/test/opencv/Gausian.cpp" "~/Documents/vblox.xilinx/software/test/opencv/fast9.cpp" "~/Documents/vblox.xilinx/software/test/opencv/dilation.cpp" "~/Documents/vblox.xilinx/software/test/opencv/test.cpp" "~/Documents/vblox.xilinx/scripts/ipgen_xilinx/ip_setup.py" "~/Documents/vblox.xilinx/scripts/ipgen_xilinx/adv7511_lib.mss" "~/Documents/vblox.xilinx/scripts/ipgen_xilinx/../../systems/zedboard_hdmi_arm/bsp/system.mss" "~/Documents/vblox.altera/software/test/opencv/../../lib/vbxsim/vbxsim_port.h" "~/Documents/vblox.altera/software/demo/veek/sources.mk" "~/Documents/vblox.altera/software/demo/veek/opencv_test.cpp" "~/Documents/vblox.altera/software/test/opencv/../../demo/veek/opencv/" "~/Documents/vblox.altera/software/test/opencv/test.cpp" "/nfs/home/joel/Documents/vblox.altera/software/test/opencv/Gausian.cpp" "/nfs/home/joel/Documents/vblox.altera/software/test/opencv/sources.mk" "/nfs/home/joel/Documents/vblox.altera/software/test/opencv/fast9.cpp"))
(setq string-rectangle-history '("/nfs" "vec_len" "struct" " " "printf(\"\");" "u" "+2" "e" "Vector_pool.enqueu(v_rowA.dequeue())" "or" " " "this_pixel" " " "||" "// &&" "L" "1" "(vbx_word_t*)" "3" "v_" "next_row," "00+row_length" "=v_" "*" "define" "(vbx_uword_t*)" "point_state(" "+" "*(" "2"))
(setq buffer-name-history '("*Packages*" "*Compile-Log*" "*butterfly*" "new_style.cpp" "*gud-test.elf*" "fifo.hpp" "vbx_test.h" "vbx_test.c" "Gausian.cpp" "*gud-test.elf*" "test.cpp" "fifo.hpp" "Gausian.cpp" ".emacs" "*Customize Group: Emacs*" "*Customize Group: External*" "*Customize Group: Programming*" "*info*" ".emacs" "test.cpp" "Gausian.cpp" "vbxx.hpp" "*compilation*" "test.cpp" "fast9.cpp" "test.cpp" "ip_setup.py" "adv7511_lib.mss" "system.mss" "vbxsim_port.h"))
(setq extended-command-history '("ac-clang-set-cflags" "package-list-packages" "butterfly" "compile" "gdb-many-windows" "gdb" "compile" "gdb" "gdb-many-windows" "gdb" "compile" "package-list-packages" "compile" "gdb-many-windows" "gdb" "compile" "replace-string" "compile" "gdb" "gud-tooltip-mode" "gdb-many-windows" "gdb" "compile" "shell-command" "gdb" "gdb-many-windows" "gdb" "gdb-many-windows" "gdb" "pwd"))
